
services:
  user_management:
    image: backend_image
    container_name: user_management
    build: 
      context: ./
      target: backend
    command: |
      sh -c "
        cd /backend/user/userManagement;
        npm install;
        exec npm start
      "
    expose:
      - 3000
    volumes:
      - ./backend/:/backend/:rw #Vai guardar na home 
    networks:
      - ft_transcendence
    env_file:
      - .env

  game:
    image: backend_image
    container_name: pongify
    command: |
      sh -c "
        cd /pong_vol/game-project;
        npm install;
        exec npm run watch
      "
    environment:
      - NODE_ENV=PRODUCTION
    volumes:
      - ./game-project:/pong_vol/game-project/:rw
    expose:
      - 5000
    ports:
      - "5000:5000"
    networks:
      - ft_transcendence
    env_file:
      - .env

  services-api:
    image: backend_image
    container_name: services-api
    command: |
      sh -c "
        cd /backend;
        npm install;
        exec npm run dev
      "
    ports:
      - "7000:7000"
    volumes:
      - ./backend/services-api:/backend/:rw #Vai guardar na home 
    networks:
      - ft_transcendence
    env_file:
      - .env

  two-factor-auth:
    image: backend_image
    container_name: two-factor-auth
    command: |
      sh -c "
        cd /backend;
        npm install;
        exec npm run start
      "
    ports:
      - "3500:3500"
    volumes:
      - ./backend/two-factor-auth:/backend/:rw #Vai guardar na home 
    networks:
      - ft_transcendence

  chat:
    image: backend_image
    container_name: chat
    command: |
      sh -c "
        cd /chat;
        npm install;
        exec npm start
      "
    expose:
      - 2000
    ports:
      - "2000:2000"
    volumes:
      - ./chat/:/chat/:rw #Vai guardar na home 
    networks:
      - ft_transcendence
    env_file:
      - .env
  
  vite-nginx:
    image: vite-nginx
    container_name: vite-nginx
    build:
      context: ./
      target: frontend
    ports:
      - "5500:8008"
    networks:
      - ft_transcendence

  nginx:
    image: nginx-gateway
    container_name: nginx-gateway
    build:
      context: ./
      target: nginx-gateway
    ports:
      - "8080:80"
    depends_on:
       - services-api
    volumes:
      - ./nginx.conf.template:/etc/nginx/templates/nginx.conf.template
      - /dev/null:/etc/nginx/conf.d/default.conf
    env_file:
      - ./.env
    networks:
      - ft_transcendence

networks:
  ft_transcendence:
    name: ft_transcendence
    driver: bridge
